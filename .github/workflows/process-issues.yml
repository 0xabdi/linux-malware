name: Process Issues
on:
  issues:
    types: [opened, edited]
  push:
    branches:
      - gpayne-workflow-testing

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/sync-issues.sh
          ./src/tools/sync-issues.sh

      - name: Generate README.md.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install -r src/tools/requirements.txt
          python3 src/tools/generate-README.md.py

      - name: Generate ATTACK.md.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 src/tools/generate-ATTACK.md.py

      - name: Retrieve Articles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/retrieve-articles.sh
          ./src/tools/retrieve-articles.sh

      - name: Lint Intel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/intel-lint.sh
          ./src/tools/intel-lint.sh

      - name: Analyze articles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          perl src/tools/analyse-articles.pl

      - name: Install dependencies for managing binaries
        run: |
          sudo apt update
          sudo apt install -y p7zip-full upx clamav
          sudo freshclam

      - name: Unpack binaries
        run: ./src/tools/unpack-binaries.sh

      - name: Scan binaries
        run: ./src/tools/scan-binaries.sh

      - name: Triage binaries
        run: ./src/tools/triage-binary.sh

      - name: Lint binaries
        run: ./src/tools/binary-lint.sh
