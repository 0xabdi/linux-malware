name: Process Issues

on:
  issues:
    types: [opened, edited]
  push:
    branches:
      - gpayne-workflow-testing

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up cache for GH CLI
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/gh
          key: ${{ runner.os }}-gh-cli

      - name: Install GH CLI
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Authenticate GH CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.config/gh
          echo "github.com:" > ~/.config/gh/hosts.yml
          echo "  user: GITHUB_USER" >> ~/.config/gh/hosts.yml
          echo "  oauth_token: ${GITHUB_TOKEN}" >> ~/.config/gh/hosts.yml
          echo "  git_protocol: https" >> ~/.config/gh/hosts.yml

  sync-issues:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Restore GH CLI cache
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/gh
          key: ${{ runner.os }}-gh-cli
  
      - name: Install GH CLI
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh
  
      - name: Authenticate GH CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.config/gh
          echo "github.com:" > ~/.config/gh/hosts.yml
          echo "  user: GITHUB_USER" >> ~/.config/gh/hosts.yml
          echo "  oauth_token: ${GITHUB_TOKEN}" >> ~/.config/gh/hosts.yml
          echo "  git_protocol: https" >> ~/.config/gh/hosts.yml
  
      - name: Run sync-issues.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/sync-issues.sh
          ./src/tools/sync-issues.sh --date-filter
          
  generate-docs:
    runs-on: ubuntu-latest
    needs: sync-issues
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Restore GH CLI cache
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/gh
          key: ${{ runner.os }}-gh-cli
  
      - name: Install Python Dependencies
        run: pip install pyattck
  
      - name: Generate README
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python3 src/tools/generate-README.md.py
  
      - name: Generate ATTACK
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python3 src/tools/generate-ATTACK.md.py
        

  manage-articles:
    runs-on: ubuntu-latest
    needs: generate-docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore GH CLI cache
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/gh
          key: ${{ runner.os }}-gh-cli

      - name: Retrieve articles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/retrieve-articles.sh
          ./src/tools/retrieve-articles.sh

      - name: Analyse articles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: perl src/tools/analyse-articles.pl

      - name: Lint articles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./src/tools/intel-lint.sh
          ./src/tools/intel-lint.sh

  manage-binaries:
    runs-on: ubuntu-20.04
    needs: manage-articles
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Restore GH CLI cache
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/gh
          key: ${{ runner.os }}-gh-cli
  
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y p7zip-full upx clamav
          sudo systemctl stop clamav-freshclam
          sudo freshclam
  
      - name: Unpack binaries
        run: ./src/tools/unpack-binaries.sh
  
      - name: Scan binaries
        run: ./src/tools/scan-binaries.sh
  
      - name: Triage binaries
        run: ./src/tools/triage-binary.sh
  
      - name: Lint binaries
        run: ./src/tools/binary-lint.sh