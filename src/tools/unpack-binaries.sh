#!/bin/sh

# Recursively find and extract zip files
find . -type f -name "*.zip" -exec 7z x "{}" -pinfected \;

# Recursively find and process ELF files and other files within the archives
process_files() {
    find . -type f \( -name "*.elf" -o -name "*.bin" -o -name "*.exe" \) -print0 | while IFS= read -r -d '' filename; do
        if file "$filename" | grep -q ARM; then
            mv "$filename" "$filename.arm"
        elif file "$filename" | grep -q MIPS; then
            mv "$filename" "$filename.mips"
        elif file "$filename" | grep -q 0386; then
            mv "$filename" "$filename.x86"
        elif file "$filename" | grep -q x86-64; then
            mv "$filename" "$filename.x86_64"
        elif file "$filename" | grep -q Power; then
            mv "$filename" "$filename.ppc"
        elif file "$filename" | grep -q SPARC; then
            mv "$filename" "$filename.sparc"
        elif file "$filename" | grep -q SH; then
            mv "$filename" "$filename.sh"
        elif file "$filename" | grep -q m68k; then
            mv "$filename" "$filename.m68k"
        fi
    done
}

# Process ELF files
process_files

# Recursively find and unpack files with UPX and Binwalk
find . -type f -name "*.elf*" -print0 | while IFS= read -r -d '' filename; do
    if [ -f "/usr/local/src/upx-trunk/src/upx.out" ]; then
        /usr/local/src/upx-trunk/src/upx.out -d -o "${filename}.unpacked" "${filename}" || echo "Failed to unpack ${filename} with UPX."
    fi
    binwalk -e "${filename}" || echo "Failed to unpack ${filename} with Binwalk."
done

# Run ClamAV scan on unpacked files
find . -type f -name "*.unpacked" -print0 | while IFS= read -r -d '' filename; do
    clamscan "${filename}" || echo "ClamAV scan failed for ${filename}."
done

# Optionally, run ClamAV on original ELF files if required
find . -type f -name "*.elf*" -print0 | while IFS= read -r -d '' filename; do
    clamscan "${filename}" || echo "ClamAV scan failed for ${filename}."
done
